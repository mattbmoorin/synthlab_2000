/// <reference types="jest" />
export declare const mockChannelConstructor: jest.Mock<any, any>;
export declare const mockChannelVolume: jest.Mock<any, any>;
export declare const mockChannelPan: jest.Mock<any, any>;
export declare const mockChannelDispose: jest.Mock<any, any>;
declare class Channel {
    constructor(volume: any, pan: any);
}
export declare const mockPolySynthConstructor: jest.Mock<any, any>;
export declare const mockPolySynthTriggerAttack: jest.Mock<any, any>;
export declare const mockPolySynthTriggerRelease: jest.Mock<any, any>;
export declare const mockPolySynthDispose: jest.Mock<any, any>;
export declare const mockPolySynthChain: jest.Mock<any, any>;
export declare const mockPolySynthSet: jest.Mock<any, any>;
declare class PolySynth {
    constructor(polyphony: any, voice: any, voiceArgs: any);
}
export declare const mockMembraneSynthConstructor: jest.Mock<any, any>;
declare class MembraneSynth {
    constructor(options: any);
}
export declare const mockMetalSynthConstructor: jest.Mock<any, any>;
declare class MetalSynth {
    constructor(options: any);
}
export declare const mockNoiseSynthConstructor: jest.Mock<any, any>;
declare class NoiseSynth {
    constructor(options: any);
}
export declare const mockPluckSynthConstructor: jest.Mock<any, any>;
declare class PluckSynth {
    constructor(options: any);
}
export declare const mockSamplerConstructor: jest.Mock<any, any>;
export declare const mockSamplerDispose: jest.Mock<any, any>;
declare class Sampler {
    constructor(samples: any);
}
export declare const mockAutoFilterConstructor: jest.Mock<any, any>;
declare class AutoFilter {
    constructor();
}
export declare const mockAutoPannerConstructor: jest.Mock<any, any>;
declare class AutoPanner {
    constructor();
}
export declare const mockEQ3Constructor: jest.Mock<any, any>;
declare class EQ3 {
    constructor(low: any, mid: any, high: any);
}
export declare const mockSequenceConstructor: jest.Mock<any, any>;
export declare const mockSequenceAdd: jest.Mock<any, any>;
export declare const mockSequenceRemove: jest.Mock<any, any>;
declare class Sequence {
    constructor(callback: any, steps: any);
}
declare const MockTone: {
    Master: {
        volume: {
            value: number;
        };
        mute: boolean;
        chain: jest.Mock<any, any>;
        dispose: jest.Mock<any, any>;
    };
    Transport: {
        bpm: {
            value: any;
        };
        start: jest.Mock<any, any>;
        stop: jest.Mock<any, any>;
    };
    Channel: typeof Channel;
    PolySynth: typeof PolySynth;
    Synth: string;
    AMSynth: string;
    DuoSynth: string;
    FMSynth: string;
    MembraneSynth: typeof MembraneSynth;
    MetalSynth: typeof MetalSynth;
    MonoSynth: string;
    NoiseSynth: typeof NoiseSynth;
    PluckSynth: typeof PluckSynth;
    Sampler: typeof Sampler;
    AutoFilter: typeof AutoFilter;
    AutoPanner: typeof AutoPanner;
    EQ3: typeof EQ3;
    Sequence: typeof Sequence;
};
export default MockTone;
