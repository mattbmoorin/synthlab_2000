{"ast":null,"code":"var _jsxFileName = \"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Incrementer.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Incrementer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateLength = e => {\n      this.setState({\n        char: e.target.value.length\n      });\n    };\n\n    this.incrementCounter = () => {\n      this.setState({\n        count: this.state.char\n      });\n    };\n\n    this.state = {\n      counter: 0,\n      char: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: this.updateLength\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementCounter,\n        children: \"click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Incrementer;","map":{"version":3,"sources":["/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Incrementer.jsx"],"names":["React","Component","Incrementer","constructor","props","updateLength","e","setState","char","target","value","length","incrementCounter","count","state","counter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACC,SAAhC,CAA0C;AACxCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC;AAAvB,OAAd;AACD,KAVkB;;AAAA,SAYnBC,gBAZmB,GAYA,MAAM;AACvB,WAAKL,QAAL,CAAc;AAAEM,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWN;AAApB,OAAd;AACD,KAdkB;;AAEjB,SAAKM,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CADE;AAEXP,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAUDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,kBAAM,KAAKF,KAAL,CAAWC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,QAAQ,EAAE,KAAKV;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKO,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADF;AAOD;;AAzBuC;;AA4B1C,eAAeV,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Incrementer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      char: 0,\n    };\n  }\n\n  updateLength = (e) => {\n    this.setState({ char: e.target.value.length });\n  };\n\n  incrementCounter = () => {\n    this.setState({ count: this.state.char });\n  };\n\n  render() {\n    return (\n      <>\n        <div>{this.state.counter}</div>\n        <input onChange={this.updateLength}></input>\n        <button onClick={this.incrementCounter}>click me</button>\n      </>\n    );\n  }\n}\n\nexport default Incrementer;\n"]},"metadata":{},"sourceType":"module"}