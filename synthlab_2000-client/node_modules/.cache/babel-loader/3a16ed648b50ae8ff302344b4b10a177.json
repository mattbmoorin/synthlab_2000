{"ast":null,"code":"var _jsxFileName = \"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Controller.jsx\";\nimport { Song, Track, Instrument } from 'reactronica';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Controller = () => {\n  var _s = $RefreshSig$();\n\n  const PianoRollExample = () => {\n    _s();\n\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [currentStepIndex, setCurrentStepIndex] = useState(0);\n    const [steps, setSteps] = useState([['C3', 'E3', 'A3'], null, ['C3', 'E3', 'G3', 'B3'], null, ['C3', 'F3', 'A3'], null, ['D3', 'G3', 'B3'], null]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPlaying(!isPlaying),\n        children: isPlaying ? 'Play' : 'Stop'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PianoRollExample, {\n        currentStepIndex: currentStepIndex,\n        onClick: steps => setSteps(steps)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Song, {\n        isPlaying: isPlaying,\n        children: /*#__PURE__*/_jsxDEV(Track, {\n          steps: steps // Callback triggers on every step\n          ,\n          onStepPlay: (stepNotes, index) => {\n            setCurrentStepIndex(index);\n          },\n          children: /*#__PURE__*/_jsxDEV(Instrument, {\n            type: \"polySynth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  _s(PianoRollExample, \"dRWsEs7GtaR5PLwDMaUpKGXhcMc=\");\n};\n\n_c = Controller;\nexport default Controller;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"sources":["/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Controller.jsx"],"names":["Song","Track","Instrument","React","useState","useEffect","Controller","PianoRollExample","isPlaying","setIsPlaying","currentStepIndex","setCurrentStepIndex","steps","setSteps","stepNotes","index"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,aAAxC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,UAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,UAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,CAAD,CAAxD;AACA,UAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CACjC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CADiC,EAEjC,IAFiC,EAGjC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAHiC,EAIjC,IAJiC,EAKjC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CALiC,EAMjC,IANiC,EAOjC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAPiC,EAQjC,IARiC,CAAD,CAAlC;AAUA,wBACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMK,YAAY,CAAC,CAACD,SAAF,CAAnC;AAAA,kBACGA,SAAS,GAAG,MAAH,GAAY;AADxB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,gBAAD;AACE,QAAA,gBAAgB,EAAEE,gBADpB;AAEE,QAAA,OAAO,EAAGE,KAAD,IAAWC,QAAQ,CAACD,KAAD;AAF9B;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEJ,SAAjB;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAEI,KADT,CAEE;AAFF;AAGE,UAAA,UAAU,EAAE,CAACE,SAAD,EAAYC,KAAZ,KAAsB;AAChCJ,YAAAA,mBAAmB,CAACI,KAAD,CAAnB;AACD,WALH;AAAA,iCAOE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,oBADF;AAsBD,GAnCD;;AADuB,KACjBR,gBADiB;AAqCxB,CArCD;;KAAMD,U;AAuCN,eAAeA,UAAf","sourcesContent":["import { Song, Track, Instrument } from 'reactronica';\nimport React, { useState, useEffect } from 'react';\n\nconst Controller = () => {\n  const PianoRollExample = () => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [currentStepIndex, setCurrentStepIndex] = useState(0);\n    const [steps, setSteps] = useState([\n      ['C3', 'E3', 'A3'],\n      null,\n      ['C3', 'E3', 'G3', 'B3'],\n      null,\n      ['C3', 'F3', 'A3'],\n      null,\n      ['D3', 'G3', 'B3'],\n      null,\n    ]);\n    return (\n      <>\n        <button onClick={() => setIsPlaying(!isPlaying)}>\n          {isPlaying ? 'Play' : 'Stop'}\n        </button>\n        <PianoRollExample\n          currentStepIndex={currentStepIndex}\n          onClick={(steps) => setSteps(steps)}\n        />\n        <Song isPlaying={isPlaying}>\n          <Track\n            steps={steps}\n            // Callback triggers on every step\n            onStepPlay={(stepNotes, index) => {\n              setCurrentStepIndex(index);\n            }}\n          >\n            <Instrument type=\"polySynth\" />\n          </Track>\n        </Song>\n      </>\n    );\n  };\n};\n\nexport default Controller;\n"]},"metadata":{},"sourceType":"module"}