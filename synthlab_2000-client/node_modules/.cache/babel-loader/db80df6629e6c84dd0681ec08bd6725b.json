{"ast":null,"code":"var _jsxFileName = \"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Controller.jsx\";\nimport { Song, Track, Instrument, Effect } from 'reactronica';\nimport * as Tone from 'tone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Controller = () => {\n  const synthOne = new Tone.FMSynth().toDestination();\n\n  const synthOneStartLooper = () => {\n    const looper = new Tone.Loop(synthOneLooper, '8n');\n    looper.start(0);\n  };\n\n  const synthOneLooper = time => {\n    synthOne.triggerAttackRelease('c3', '8n', time);\n    console.log(time);\n  };\n\n  const transportStart = () => {\n    Tone.Transport.start();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: synthOneStartLooper,\n      children: \"track 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: synthOneStartLooper,\n      children: \"track 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n};\n\n_c = Controller;\nexport default Controller;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"sources":["/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Controller.jsx"],"names":["Song","Track","Instrument","Effect","Tone","Controller","synthOne","FMSynth","toDestination","synthOneStartLooper","looper","Loop","synthOneLooper","start","time","triggerAttackRelease","console","log","transportStart","Transport"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,MAAlC,QAAgD,aAAhD;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAG,IAAIF,IAAI,CAACG,OAAT,GAAmBC,aAAnB,EAAjB;;AAEA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,UAAMC,MAAM,GAAG,IAAIN,IAAI,CAACO,IAAT,CAAcC,cAAd,EAA8B,IAA9B,CAAf;AACAF,IAAAA,MAAM,CAACG,KAAP,CAAa,CAAb;AACD,GAHD;;AAKA,QAAMD,cAAc,GAAIE,IAAD,IAAU;AAC/BR,IAAAA,QAAQ,CAACS,oBAAT,CAA8B,IAA9B,EAAoC,IAApC,EAA0CD,IAA1C;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GAHD;;AAKA,QAAMI,cAAc,GAAG,MAAM;AAC3Bd,IAAAA,IAAI,CAACe,SAAL,CAAeN,KAAf;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEJ,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,oBAEE;AAAQ,MAAA,OAAO,EAAEA,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAvBD;;KAAMJ,U;AAyBN,eAAeA,UAAf","sourcesContent":["import { Song, Track, Instrument, Effect } from 'reactronica';\nimport * as Tone from 'tone';\n\nconst Controller = () => {\n  const synthOne = new Tone.FMSynth().toDestination();\n\n  const synthOneStartLooper = () => {\n    const looper = new Tone.Loop(synthOneLooper, '8n');\n    looper.start(0);\n  };\n\n  const synthOneLooper = (time) => {\n    synthOne.triggerAttackRelease('c3', '8n', time);\n    console.log(time);\n  };\n\n  const transportStart = () => {\n    Tone.Transport.start();\n  };\n\n  return (\n    <>\n      <button onClick={synthOneStartLooper}>track 2</button>;\n      <button onClick={synthOneStartLooper}>track 2</button>;\n    </>\n  );\n};\n\nexport default Controller;\n"]},"metadata":{},"sourceType":"module"}