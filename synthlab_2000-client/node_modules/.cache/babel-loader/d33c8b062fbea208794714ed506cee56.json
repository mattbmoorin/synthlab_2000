{"ast":null,"code":"var _jsxFileName = \"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Controller.jsx\";\nimport { Song, Track, Instrument, Effect } from 'reactronica';\nimport * as Tone from 'tone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Controller = () => {\n  const voice1 = new Tone.Oscillator().toDestination();\n  const voice2 = new Tone.Synth().toDestination();\n  const voice3 = new Tone.Synth().toDestination();\n  const voice4 = new Tone.Synth().toDestination();\n\n  const repeater = () => {\n    Tone.Transport.scheduleRepeat(time => {\n      voice1.start(time).stop(time + 0.1);\n    }, '4n');\n  };\n\n  const transportStart = () => {\n    Tone.Transport.start();\n  };\n\n  const transportStop = () => {\n    Tone.Transport.stop();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: repeater,\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: transportStart,\n      children: \"try\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: transportStop,\n      children: \"stahp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Controller;\nexport default Controller;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"sources":["/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Controller.jsx"],"names":["Song","Track","Instrument","Effect","Tone","Controller","voice1","Oscillator","toDestination","voice2","Synth","voice3","voice4","repeater","Transport","scheduleRepeat","time","start","stop","transportStart","transportStop"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,MAAlC,QAAgD,aAAhD;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,MAAM,GAAG,IAAIF,IAAI,CAACG,UAAT,GAAsBC,aAAtB,EAAf;AACA,QAAMC,MAAM,GAAG,IAAIL,IAAI,CAACM,KAAT,GAAiBF,aAAjB,EAAf;AACA,QAAMG,MAAM,GAAG,IAAIP,IAAI,CAACM,KAAT,GAAiBF,aAAjB,EAAf;AACA,QAAMI,MAAM,GAAG,IAAIR,IAAI,CAACM,KAAT,GAAiBF,aAAjB,EAAf;;AAEA,QAAMK,QAAQ,GAAG,MAAM;AACrBT,IAAAA,IAAI,CAACU,SAAL,CAAeC,cAAf,CAA+BC,IAAD,IAAU;AACtCV,MAAAA,MAAM,CAACW,KAAP,CAAaD,IAAb,EAAmBE,IAAnB,CAAwBF,IAAI,GAAG,GAA/B;AACD,KAFD,EAEG,IAFH;AAGD,GAJD;;AAMA,QAAMG,cAAc,GAAG,MAAM;AAC3Bf,IAAAA,IAAI,CAACU,SAAL,CAAeG,KAAf;AACD,GAFD;;AAIA,QAAMG,aAAa,GAAG,MAAM;AAC1BhB,IAAAA,IAAI,CAACU,SAAL,CAAeI,IAAf;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEM,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CA1BD;;KAAMf,U;AA4BN,eAAeA,UAAf","sourcesContent":["import { Song, Track, Instrument, Effect } from 'reactronica';\nimport * as Tone from 'tone';\n\nconst Controller = () => {\n  const voice1 = new Tone.Oscillator().toDestination();\n  const voice2 = new Tone.Synth().toDestination();\n  const voice3 = new Tone.Synth().toDestination();\n  const voice4 = new Tone.Synth().toDestination();\n\n  const repeater = () => {\n    Tone.Transport.scheduleRepeat((time) => {\n      voice1.start(time).stop(time + 0.1);\n    }, '4n');\n  };\n\n  const transportStart = () => {\n    Tone.Transport.start();\n  };\n\n  const transportStop = () => {\n    Tone.Transport.stop();\n  };\n  return (\n    <>\n      <button onClick={repeater}>start</button>\n      <button onClick={transportStart}>try</button>\n      <button onClick={transportStop}>stahp</button>\n    </>\n  );\n};\n\nexport default Controller;\n"]},"metadata":{},"sourceType":"module"}