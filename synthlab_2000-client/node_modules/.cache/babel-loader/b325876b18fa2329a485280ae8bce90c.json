{"ast":null,"code":"/**\n *  StartAudioContext.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2016 Yotam Mann\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.StartAudioContext = factory();\n  }\n})(this, function () {\n  //TAP LISTENER/////////////////////////////////////////////////////////////\n\n  /**\n   * @class  Listens for non-dragging tap ends on the given element\n   * @param {Element} element\n   * @internal\n   */\n  var TapListener = function (element, context) {\n    this._dragged = false;\n    this._element = element;\n    this._bindedMove = this._moved.bind(this);\n    this._bindedEnd = this._ended.bind(this, context);\n    element.addEventListener(\"touchstart\", this._bindedEnd);\n    element.addEventListener(\"touchmove\", this._bindedMove);\n    element.addEventListener(\"touchend\", this._bindedEnd);\n    element.addEventListener(\"mouseup\", this._bindedEnd);\n  };\n  /**\n   * drag move event\n   */\n\n\n  TapListener.prototype._moved = function (e) {\n    this._dragged = true;\n  };\n  /**\n   * tap ended listener\n   */\n\n\n  TapListener.prototype._ended = function (context) {\n    if (!this._dragged) {\n      startContext(context);\n    }\n\n    this._dragged = false;\n  };\n  /**\n   * remove all the bound events\n   */\n\n\n  TapListener.prototype.dispose = function () {\n    this._element.removeEventListener(\"touchstart\", this._bindedEnd);\n\n    this._element.removeEventListener(\"touchmove\", this._bindedMove);\n\n    this._element.removeEventListener(\"touchend\", this._bindedEnd);\n\n    this._element.removeEventListener(\"mouseup\", this._bindedEnd);\n\n    this._bindedMove = null;\n    this._bindedEnd = null;\n    this._element = null;\n  }; //END TAP LISTENER/////////////////////////////////////////////////////////\n\n  /**\n   * Plays a silent sound and also invoke the \"resume\" method\n   * @param {AudioContext} context\n   * @private\n   */\n\n\n  function startContext(context) {\n    // this accomplishes the iOS specific requirement\n    var buffer = context.createBuffer(1, 1, context.sampleRate);\n    var source = context.createBufferSource();\n    source.buffer = buffer;\n    source.connect(context.destination);\n    source.start(0); // resume the audio context\n\n    if (context.resume) {\n      context.resume();\n    }\n  }\n  /**\n   * Returns true if the audio context is started\n   * @param  {AudioContext}  context\n   * @return {Boolean}\n   * @private\n   */\n\n\n  function isStarted(context) {\n    return context.state === \"running\";\n  }\n  /**\n   * Invokes the callback as soon as the AudioContext\n   * is started\n   * @param  {AudioContext}   context\n   * @param  {Function} callback\n   */\n\n\n  function onStarted(context, callback) {\n    function checkLoop() {\n      if (isStarted(context)) {\n        callback();\n      } else {\n        requestAnimationFrame(checkLoop);\n\n        if (context.resume) {\n          context.resume();\n        }\n      }\n    }\n\n    if (isStarted(context)) {\n      callback();\n    } else {\n      checkLoop();\n    }\n  }\n  /**\n   * Add a tap listener to the audio context\n   * @param  {Array|Element|String|jQuery} element\n   * @param {Array} tapListeners\n   */\n\n\n  function bindTapListener(element, tapListeners, context) {\n    if (Array.isArray(element) || NodeList && element instanceof NodeList) {\n      for (var i = 0; i < element.length; i++) {\n        bindTapListener(element[i], tapListeners, context);\n      }\n    } else if (typeof element === \"string\") {\n      bindTapListener(document.querySelectorAll(element), tapListeners, context);\n    } else if (element.jquery && typeof element.toArray === \"function\") {\n      bindTapListener(element.toArray(), tapListeners, context);\n    } else if (Element && element instanceof Element) {\n      //if it's an element, create a TapListener\n      var tap = new TapListener(element, context);\n      tapListeners.push(tap);\n    }\n  }\n  /**\n   * @param {AudioContext} context The AudioContext to start.\n   * @param {Array|String|Element|jQuery=} elements For iOS, the list of elements\n   *                                               to bind tap event listeners\n   *                                               which will start the AudioContext. If\n   *                                               no elements are given, it will bind\n   *                                               to the document.body.\n   * @param {Function=} callback The callback to invoke when the AudioContext is started.\n   * @return {Promise} The promise is invoked when the AudioContext\n   *                       is started.\n   */\n\n\n  function StartAudioContext(context, elements, callback) {\n    //the promise is invoked when the AudioContext is started\n    var promise = new Promise(function (success) {\n      onStarted(context, success);\n    }); // The TapListeners bound to the elements\n\n    var tapListeners = []; // add all the tap listeners\n\n    if (!elements) {\n      elements = document.body;\n    }\n\n    bindTapListener(elements, tapListeners, context); //dispose all these tap listeners when the context is started\n\n    promise.then(function () {\n      for (var i = 0; i < tapListeners.length; i++) {\n        tapListeners[i].dispose();\n      }\n\n      tapListeners = null;\n\n      if (callback) {\n        callback();\n      }\n    });\n    return promise;\n  }\n\n  return StartAudioContext;\n});","map":{"version":3,"sources":["/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/node_modules/startaudiocontext/StartAudioContext.js"],"names":["root","factory","define","amd","module","exports","StartAudioContext","TapListener","element","context","_dragged","_element","_bindedMove","_moved","bind","_bindedEnd","_ended","addEventListener","prototype","e","startContext","dispose","removeEventListener","buffer","createBuffer","sampleRate","source","createBufferSource","connect","destination","start","resume","isStarted","state","onStarted","callback","checkLoop","requestAnimationFrame","bindTapListener","tapListeners","Array","isArray","NodeList","i","length","document","querySelectorAll","jquery","toArray","Element","tap","push","elements","promise","Promise","success","body","then"],"mappings":"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","sourcesContent":["/**\n *  StartAudioContext.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2016 Yotam Mann\n */\n(function (root, factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine([], factory)\n\t } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory()\n\t} else {\n\t\troot.StartAudioContext = factory()\n  }\n}(this, function () {\n\n\t//TAP LISTENER/////////////////////////////////////////////////////////////\n\n\t/**\n\t * @class  Listens for non-dragging tap ends on the given element\n\t * @param {Element} element\n\t * @internal\n\t */\n\tvar TapListener = function(element, context){\n\n\t\tthis._dragged = false\n\n\t\tthis._element = element\n\n\t\tthis._bindedMove = this._moved.bind(this)\n\t\tthis._bindedEnd = this._ended.bind(this, context)\n\n\t\telement.addEventListener(\"touchstart\", this._bindedEnd)\n\t\telement.addEventListener(\"touchmove\", this._bindedMove)\n\t\telement.addEventListener(\"touchend\", this._bindedEnd)\n\t\telement.addEventListener(\"mouseup\", this._bindedEnd)\n\t}\n\n\t/**\n\t * drag move event\n\t */\n\tTapListener.prototype._moved = function(e){\n\t\tthis._dragged = true\n\t};\n\n\t/**\n\t * tap ended listener\n\t */\n\tTapListener.prototype._ended = function(context){\n\t\tif (!this._dragged){\n\t\t\tstartContext(context)\n\t\t}\n\t\tthis._dragged = false\n\t};\n\n\t/**\n\t * remove all the bound events\n\t */\n\tTapListener.prototype.dispose = function(){\n\t\tthis._element.removeEventListener(\"touchstart\", this._bindedEnd)\n\t\tthis._element.removeEventListener(\"touchmove\", this._bindedMove)\n\t\tthis._element.removeEventListener(\"touchend\", this._bindedEnd)\n\t\tthis._element.removeEventListener(\"mouseup\", this._bindedEnd)\n\t\tthis._bindedMove = null\n\t\tthis._bindedEnd = null\n\t\tthis._element = null\n\t};\n\n\t//END TAP LISTENER/////////////////////////////////////////////////////////\n\n\t/**\n\t * Plays a silent sound and also invoke the \"resume\" method\n\t * @param {AudioContext} context\n\t * @private\n\t */\n\tfunction startContext(context){\n\t\t// this accomplishes the iOS specific requirement\n\t\tvar buffer = context.createBuffer(1, 1, context.sampleRate)\n\t\tvar source = context.createBufferSource()\n\t\tsource.buffer = buffer\n\t\tsource.connect(context.destination)\n\t\tsource.start(0)\n\n\t\t// resume the audio context\n\t\tif (context.resume){\n\t\t\tcontext.resume()\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the audio context is started\n\t * @param  {AudioContext}  context\n\t * @return {Boolean}\n\t * @private\n\t */\n\tfunction isStarted(context){\n\t\t return context.state === \"running\"\n\t}\n\n\t/**\n\t * Invokes the callback as soon as the AudioContext\n\t * is started\n\t * @param  {AudioContext}   context\n\t * @param  {Function} callback\n\t */\n\tfunction onStarted(context, callback){\n\n\t\tfunction checkLoop(){\n\t\t\tif (isStarted(context)){\n\t\t\t\tcallback()\n\t\t\t} else {\n\t\t\t\trequestAnimationFrame(checkLoop)\n\t\t\t\tif (context.resume){\n\t\t\t\t\tcontext.resume()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isStarted(context)){\n\t\t\tcallback()\n\t\t} else {\n\t\t\tcheckLoop()\n\t\t}\n\t}\n\n\t/**\n\t * Add a tap listener to the audio context\n\t * @param  {Array|Element|String|jQuery} element\n\t * @param {Array} tapListeners\n\t */\n\tfunction bindTapListener(element, tapListeners, context){\n\t\tif (Array.isArray(element) || (NodeList && element instanceof NodeList)){\n\t\t\tfor (var i = 0; i < element.length; i++){\n\t\t\t\tbindTapListener(element[i], tapListeners, context)\n\t\t\t}\n\t\t} else if (typeof element === \"string\"){\n\t\t\tbindTapListener(document.querySelectorAll(element), tapListeners, context)\n\t\t} else if (element.jquery && typeof element.toArray === \"function\"){\n\t\t\tbindTapListener(element.toArray(), tapListeners, context)\n\t\t} else if (Element && element instanceof Element){\n\t\t\t//if it's an element, create a TapListener\n\t\t\tvar tap = new TapListener(element, context)\n\t\t\ttapListeners.push(tap)\n\t\t} \n\t}\n\n\t/**\n\t * @param {AudioContext} context The AudioContext to start.\n\t * @param {Array|String|Element|jQuery=} elements For iOS, the list of elements\n\t *                                               to bind tap event listeners\n\t *                                               which will start the AudioContext. If\n\t *                                               no elements are given, it will bind\n\t *                                               to the document.body.\n\t * @param {Function=} callback The callback to invoke when the AudioContext is started.\n\t * @return {Promise} The promise is invoked when the AudioContext\n\t *                       is started.\n\t */\n\tfunction StartAudioContext(context, elements, callback){\n\n\t\t//the promise is invoked when the AudioContext is started\n\t\tvar promise = new Promise(function(success) {\n\t\t\tonStarted(context, success)\n\t\t})\n\n\t\t// The TapListeners bound to the elements\n\t\tvar tapListeners = []\n\n\t\t// add all the tap listeners\n\t\tif (!elements){\n\t\t\telements = document.body\n\t\t}\n\t\tbindTapListener(elements, tapListeners, context)\n\n\t\t//dispose all these tap listeners when the context is started\n\t\tpromise.then(function(){\n\t\t\tfor (var i = 0; i < tapListeners.length; i++){\n\t\t\t\ttapListeners[i].dispose()\n\t\t\t}\n\t\t\ttapListeners = null\n\n\t\t\tif (callback){\n\t\t\t\tcallback()\n\t\t\t}\n\t\t})\n\n\t\treturn promise\n\t}\n\n\treturn StartAudioContext\n}))"]},"metadata":{},"sourceType":"script"}