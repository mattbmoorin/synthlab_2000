[{"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/index.js":"1","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/App.js":"2","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/reducers/presetReducer.jsx":"3","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Nav.jsx":"4","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Main.jsx":"5","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Footer.jsx":"6","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Err.jsx":"7","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Info.jsx":"8","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Index.jsx":"9","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/actions/index.jsx":"10","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Preset.jsx":"11","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Form.jsx":"12","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Controller.jsx":"13","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/NoteButton.jsx":"14","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/FloatRightStyle.jsx":"15","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/JumboSizer.jsx":"16","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/FormColor.jsx":"17","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Incrementer.jsx":"18"},{"size":595,"mtime":1618951972100,"results":"19","hashOfConfig":"20"},{"size":1202,"mtime":1619109675368,"results":"21","hashOfConfig":"20"},{"size":538,"mtime":1618447614718,"results":"22","hashOfConfig":"20"},{"size":1327,"mtime":1619059636135,"results":"23","hashOfConfig":"20"},{"size":218,"mtime":1618974544315,"results":"24","hashOfConfig":"20"},{"size":329,"mtime":1619103094997,"results":"25","hashOfConfig":"20"},{"size":91,"mtime":1618282406957,"results":"26","hashOfConfig":"20"},{"size":516,"mtime":1618974843096,"results":"27","hashOfConfig":"20"},{"size":592,"mtime":1619103334369,"results":"28","hashOfConfig":"20"},{"size":705,"mtime":1618447944630,"results":"29","hashOfConfig":"20"},{"size":388,"mtime":1619103366595,"results":"30","hashOfConfig":"20"},{"size":2304,"mtime":1618979663531,"results":"31","hashOfConfig":"20"},{"size":4764,"mtime":1619103997097,"results":"32","hashOfConfig":"20"},{"size":280,"mtime":1618902998517,"results":"33","hashOfConfig":"20"},{"size":169,"mtime":1619103448430,"results":"34","hashOfConfig":"20"},{"size":155,"mtime":1619059952620,"results":"35","hashOfConfig":"20"},{"size":116,"mtime":1619103779408,"results":"36","hashOfConfig":"20"},{"size":879,"mtime":1619110885566,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"16w5h7l",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/index.js",["82"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classNames from 'classnames';\n\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport App from './App';\nimport presetReducer from './reducers/presetReducer';\n\nconst store = createStore(presetReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App className=\"App\" />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["83","84"],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/App.js",[],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/reducers/presetReducer.jsx",[],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Nav.jsx",["85","86","87"],"import { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Controller from './Controller';\nimport FloatRightStyle from './FloatRightStyle';\nimport JumboSizer from './JumboSizer';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Toast from 'react-bootstrap/Toast';\nimport Button from 'react-bootstrap/Button';\n\nconst Nav = () => {\n  const [show, changeShow] = useState(true);\n\n  return (\n    <div>\n      <Container>\n        {!show && (\n          <Button onClick={() => changeShow(true)}>Show Navigation</Button>\n        )}\n        <Toast show={show} onClose={() => changeShow(false)}>\n          <Toast.Header>\n            <strong>Navigation:</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <ul>\n              <Link to=\"/\">HOME</Link>\n              <br />\n              <Link to=\"/info\">HELP</Link>\n              <br />\n              <Link to=\"/index\">FX PRESET BANK</Link>\n              <br />\n              <Link to=\"/index/new\">FX EDIT/SAVE PRESET</Link>\n              <br />\n            </ul>\n          </Toast.Body>\n        </Toast>\n        <FloatRightStyle>\n          <Controller />\n        </FloatRightStyle>\n      </Container>\n    </div>\n  );\n};\n\nexport default Nav;\n","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Main.jsx",["88"],"import Controller from './Controller';\n\nconst Main = () => {\n  return (\n    <>\n      <h2 className=\"App\">\n        SYNTHLAB 2000 - SEQUENCER WITH PROGRAMMABLE VOICES/FX\n      </h2>\n    </>\n  );\n};\n\nexport default Main;\n","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Footer.jsx",["89","90","91"],"import Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport JumboSizer from './JumboSizer';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      (c)2021 giant meteorite crashing into our petulant planet productions ltd.\n    </div>\n  );\n};\n\nexport default Footer;\n","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Err.jsx",[],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Info.jsx",[],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Index.jsx",[],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/actions/index.jsx",[],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Preset.jsx",["92","93","94"],"const Preset = (props) => {\n  const { reverb, delay, tremolo, waveshape, envelope } = props;\n\n  return (\n    <div className>\n      <br />\n      <div>Reverb = {reverb}</div>\n      <div>Delay = {delay}</div>\n      {/* <div>Tremolo = {tremolo}</div>\n      <div>Waveshape = {waveshape}</div> \n      <div>Envelope = {envelope}</div> */}\n      <br />\n    </div>\n  );\n};\n\nexport default Preset;\n","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Form.jsx",[],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Controller.jsx",["95"],"import React, { useState } from 'react';\n\nimport '../App.css';\nimport classNames from 'classnames';\nimport FormColor from './FormColor';\nimport FloatRightStyle from './FloatRightStyle';\nimport NoteButton from './NoteButton';\nimport Button from 'react-bootstrap/Button';\n\nimport * as Tone from 'tone';\n\nconst GridComponent = () => {\n  const controllerGrid = [];\n  for (let i = 0; i < 8; i++) {\n    let noteColumn = [\n      { note: 'C', isSelected: false },\n      { note: 'E', isSelected: false },\n      { note: 'A', isSelected: false },\n      { note: 'G', isSelected: false },\n    ];\n    controllerGrid.push(noteColumn);\n  }\n  return controllerGrid;\n};\n\nconst noteOctave = '5';\n\nconst Controller = ({ ...rest }) => {\n  const [controllerGrid, setControllerGrid] = useState(GridComponent()),\n    [soundIsPlaying, setSoundIsPlaying] = useState(false),\n    [currentColumnStyle, setCurrentColumnStyle] = useState(null),\n    [reverbSetting, setReverbSetting] = useState(1.5),\n    [delaySetting, setDelaySetting] = useState(0.5);\n\n  const synthesizer = new Tone.PolySynth();\n  const delay = new Tone.FeedbackDelay({ delaySetting }, 0.5).toDestination();\n  const reverb = new Tone.Reverb({ reverbSetting });\n\n  const setReverb = (e) => {\n    setReverbSetting(e.target.value);\n  };\n\n  const setDelay = (e) => {\n    setDelaySetting(e.target.value);\n  };\n\n  synthesizer.connect(reverb);\n  synthesizer.connect(delay);\n\n  const handleNoteSelected = (selectedColumn, selectedNote) => {\n    let gridWithSelectedNotes = controllerGrid.map(\n      (noteColumn, noteColumnIndex) =>\n        noteColumn.map((noteCell, noteCellIndex) => {\n          let noteCellCopy = noteCell;\n\n          if (\n            noteColumnIndex === selectedColumn &&\n            noteCellIndex === selectedNote\n          ) {\n            noteCellCopy.isSelected = !noteCell.isSelected;\n          }\n\n          return noteCellCopy;\n        })\n    );\n\n    setControllerGrid(gridWithSelectedNotes);\n  };\n\n  const playSequence = async () => {\n    let formattedSelectedNotes = [];\n\n    controllerGrid.map((noteColumn) => {\n      let noteColumnSelectedNotes = [];\n      noteColumn.map(\n        (noteShouldPlay) =>\n          noteShouldPlay.isSelected &&\n          noteColumnSelectedNotes.push(noteShouldPlay.note + noteOctave)\n      );\n      formattedSelectedNotes.push(noteColumnSelectedNotes);\n    });\n\n    await Tone.start();\n\n    const SequencerComponent = new Tone.Sequence(\n      //Sequence callback\n      (time, column) => {\n        setCurrentColumnStyle(column);\n        synthesizer.triggerAttackRelease(\n          formattedSelectedNotes[column],\n          '8n',\n          time\n        );\n      },\n      //\"Events\" (steps) sent with callback\n      [0, 1, 2, 3, 4, 5, 6, 7],\n      //Subdivision on which to engage callback (8th notes)\n      '8n'\n    );\n\n    if (soundIsPlaying) {\n      setSoundIsPlaying(false);\n      setCurrentColumnStyle(null);\n\n      // If true stop the \"transport\" and garbage collect sequencer after stopping it as well\n      await Tone.Transport.stop();\n      await SequencerComponent.stop();\n      await SequencerComponent.clear();\n      await SequencerComponent.dispose();\n\n      return;\n    }\n    setSoundIsPlaying(true);\n\n    await SequencerComponent.start();\n    await Tone.Transport.start();\n  };\n\n  return (\n    <>\n      <div className=\"note-wrapper\">\n        {controllerGrid.map((noteColumn, noteColumnIndex) => (\n          <div\n            className={classNames('note-column', {\n              'note-column--active': currentColumnStyle === noteColumnIndex,\n            })}\n            key={noteColumnIndex + 'column'}\n          >\n            {noteColumn.map(({ note, isSelected }, noteCellIndex) => (\n              <NoteButton\n                note={note}\n                isSelected={isSelected}\n                onClick={() =>\n                  handleNoteSelected(noteColumnIndex, noteCellIndex)\n                }\n                key={note + noteColumnIndex}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n      <FormColor>\n        <form id=\"fx-form\">\n          <label>\n            Reverb:\n            <input\n              type=\"text\"\n              name=\"reverb\"\n              value={reverbSetting}\n              onChange={setReverb}\n            />\n          </label>\n          <label>\n            Delay:\n            <input\n              type=\"text\"\n              name=\"delay\"\n              value={delaySetting}\n              onChange={setDelay}\n            />\n          </label>\n        </form>\n      </FormColor>\n\n      <FloatRightStyle>\n        <Button className=\"play-button\" onClick={() => playSequence()}>\n          {soundIsPlaying ? '[]' : '|>'}\n        </Button>\n        <br />\n      </FloatRightStyle>\n    </>\n  );\n};\n\nexport default Controller;\n","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/NoteButton.jsx",["96"],"import classNames from 'classnames';\n\nconst NoteButton = ({ note, isSelected, ...rest }) => {\n  const noteClasses = isSelected ? 'note note--active' : 'note';\n  return (\n    <button className={noteClasses} {...rest}>\n      {note}\n    </button>\n  );\n};\n\nexport default NoteButton;\n","/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/FloatRightStyle.jsx",[],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/JumboSizer.jsx",[],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/FormColor.jsx",[],"/Users/wetmath/Development/synthlab_2000/synthlab_2000-client/src/components/Incrementer.jsx",["97"],{"ruleId":"98","severity":1,"message":"99","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":18},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"98","severity":1,"message":"106","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":14},{"ruleId":"98","severity":1,"message":"107","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"108","line":9,"column":8,"nodeType":"100","messageId":"101","endLine":9,"endColumn":17},{"ruleId":"98","severity":1,"message":"109","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":18},{"ruleId":"98","severity":1,"message":"108","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":17},{"ruleId":"98","severity":1,"message":"110","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":17},{"ruleId":"98","severity":1,"message":"107","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":18},{"ruleId":"98","severity":1,"message":"111","line":2,"column":26,"nodeType":"100","messageId":"101","endLine":2,"endColumn":33},{"ruleId":"98","severity":1,"message":"112","line":2,"column":35,"nodeType":"100","messageId":"101","endLine":2,"endColumn":44},{"ruleId":"98","severity":1,"message":"113","line":2,"column":46,"nodeType":"100","messageId":"101","endLine":2,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":73,"column":37,"nodeType":"116","messageId":"117","endLine":73,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":18},{"ruleId":"98","severity":1,"message":"118","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},"no-unused-vars","'classNames' is defined but never used.","Identifier","unusedVar","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'styled' is defined but never used.","'JumboSizer' is defined but never used.","'Jumbotron' is defined but never used.","'Controller' is defined but never used.","'Container' is defined but never used.","'tremolo' is assigned a value but never used.","'waveshape' is assigned a value but never used.","'envelope' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]